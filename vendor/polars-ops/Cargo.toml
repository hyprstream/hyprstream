# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "polars-ops"
version = "0.45.1"
authors = ["Ritchie Vink <ritchie46@gmail.com>"]
build = "build.rs"
autolib = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "More operations on Polars data structures"
homepage = "https://www.pola.rs/"
readme = "README.md"
license = "MIT"
repository = "https://github.com/pola-rs/polars"

[lib]
name = "polars_ops"
path = "src/lib.rs"

[dependencies.ahash]
version = ">=0.8.5"

[dependencies.aho-corasick]
version = "1.1"
optional = true

[dependencies.argminmax]
version = "0.6.2"
features = ["float"]
default-features = false

[dependencies.arrow]
version = "0.45.1"
features = [
    "compute_aggregate",
    "compute_arithmetics",
    "compute_bitwise",
    "compute_boolean",
    "compute_boolean_kleene",
    "compute_comparison",
]
default-features = false
package = "polars-arrow"

[dependencies.base64]
version = "0.22.0"
optional = true

[dependencies.bytemuck]
version = "1.11"
features = [
    "derive",
    "extern_crate_alloc",
]

[dependencies.chrono]
version = "0.4.31"
features = ["std"]
optional = true
default-features = false

[dependencies.chrono-tz]
version = "0.10"
optional = true

[dependencies.either]
version = "1.11"

[dependencies.hashbrown]
version = "0.15.0"
features = [
    "rayon",
    "serde",
]

[dependencies.hex]
version = "0.4.3"
optional = true

[dependencies.indexmap]
version = "2"
features = [
    "std",
    "serde",
]

[dependencies.jsonpath_lib]
version = "0.0.1"
optional = true
package = "jsonpath_lib_polars_vendor"

[dependencies.memchr]
version = "2.6"

[dependencies.num-traits]
version = "0.2"

[dependencies.polars-compute]
version = "0.45.1"
default-features = false

[dependencies.polars-core]
version = "0.45.1"
features = [
    "algorithm_group_by",
    "zip_with",
]
default-features = false

[dependencies.polars-error]
version = "0.45.1"
default-features = false

[dependencies.polars-json]
version = "0.45.1"
optional = true
default-features = false

[dependencies.polars-schema]
version = "0.45.1"
default-features = false

[dependencies.polars-utils]
version = "0.45.1"
default-features = false

[dependencies.rand]
version = "0.8"
features = [
    "small_rng",
    "std",
]
optional = true

[dependencies.rand_distr]
version = "0.4"
optional = true

[dependencies.rayon]
version = "1.9"

[dependencies.regex]
version = "1.9"

[dependencies.regex-syntax]
version = "0.8.5"

[dependencies.serde]
version = "1.0.188"
features = [
    "derive",
    "rc",
]
optional = true

[dependencies.serde_json]
version = "1"
optional = true

[dependencies.strum_macros]
version = "0.26"

[dependencies.unicode-reverse]
version = "1.0.8"
optional = true

[dev-dependencies.rand]
version = "0.8"
features = ["small_rng"]

[build-dependencies.version_check]
version = "0.9.4"

[features]
abs = []
approx_unique = []
array_any_all = ["dtype-array"]
array_count = ["dtype-array"]
array_to_struct = [
    "polars-core/dtype-array",
    "polars-core/dtype-struct",
]
asof_join = []
big_idx = ["polars-core/bigidx"]
binary_encoding = [
    "base64",
    "hex",
]
bitwise = ["polars-core/bitwise"]
business = [
    "dtype-date",
    "chrono",
]
chunked_ids = []
cov = []
cross_join = []
cum_agg = []
cutqcut = [
    "dtype-categorical",
    "dtype-struct",
]
diff = []
dtype-array = ["polars-core/dtype-array"]
dtype-categorical = ["polars-core/dtype-categorical"]
dtype-date = [
    "polars-core/dtype-date",
    "polars-core/temporal",
]
dtype-datetime = [
    "polars-core/dtype-datetime",
    "polars-core/temporal",
]
dtype-decimal = ["polars-core/dtype-decimal"]
dtype-duration = [
    "polars-core/dtype-duration",
    "polars-core/temporal",
]
dtype-i16 = ["polars-core/dtype-i16"]
dtype-i8 = ["polars-core/dtype-i8"]
dtype-struct = [
    "polars-core/dtype-struct",
    "polars-core/temporal",
]
dtype-time = [
    "polars-core/dtype-time",
    "polars-core/temporal",
]
dtype-u16 = ["polars-core/dtype-u16"]
dtype-u8 = ["polars-core/dtype-u8"]
ewma = []
ewma_by = []
extract_groups = [
    "dtype-struct",
    "polars-core/regex",
]
extract_jsonpath = [
    "serde_json",
    "jsonpath_lib",
    "polars-json",
]
find_many = ["aho-corasick"]
fused = []
gather = []
hash = []
hist = [
    "dtype-categorical",
    "dtype-struct",
]
iejoin = []
interpolate = []
interpolate_by = []
is_between = []
is_first_distinct = []
is_in = ["polars-core/reinterpret"]
is_last_distinct = []
is_unique = []
list_any_all = []
list_count = []
list_drop_nulls = []
list_gather = []
list_sample = ["polars-core/random"]
list_sets = []
list_to_struct = ["polars-core/dtype-struct"]
log = []
merge_sorted = []
mode = []
moment = []
nightly = ["polars-utils/nightly"]
object = ["polars-core/object"]
pct_change = ["diff"]
peaks = []
performant = [
    "polars-core/performant",
    "fused",
]
pivot = [
    "polars-core/reinterpret",
    "polars-core/dtype-struct",
]
propagate_nans = []
random = [
    "rand",
    "rand_distr",
]
rank = ["rand"]
reinterpret = ["polars-core/reinterpret"]
repeat_by = []
replace = ["is_in"]
rle = ["dtype-struct"]
rolling_window = ["polars-core/rolling_window"]
rolling_window_by = ["polars-core/rolling_window_by"]
round_series = []
search_sorted = []
semi_anti_join = []
serde = [
    "dep:serde",
    "polars-core/serde",
    "polars-utils/serde",
    "polars-schema/serde",
]
simd = ["argminmax/nightly_simd"]
string_encoding = [
    "base64",
    "hex",
]
string_pad = ["polars-core/strings"]
string_reverse = [
    "polars-core/strings",
    "unicode-reverse",
]
string_to_integer = ["polars-core/strings"]
strings = ["polars-core/strings"]
timezones = [
    "chrono",
    "chrono-tz",
    "polars-core/temporal",
    "polars-core/timezones",
    "polars-core/dtype-datetime",
]
to_dummies = []
top_k = []
unique_counts = []

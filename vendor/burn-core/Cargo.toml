# THIS FILE IS AUTOMATICALLY GENERATED BY CARGO
#
# When uploading crates to the registry Cargo will automatically
# "normalize" Cargo.toml files for maximal compatibility
# with all versions of Cargo and also rewrite `path` dependencies
# to registry (e.g., crates.io) dependencies.
#
# If you are reading this file be aware that the original Cargo.toml
# will likely look very different (and much more reasonable).
# See Cargo.toml.orig for the original contents.

[package]
edition = "2021"
name = "burn-core"
version = "0.15.0"
authors = ["nathanielsimard <nathaniel.simard.42@gmail.com>"]
build = false
autobins = false
autoexamples = false
autotests = false
autobenches = false
description = "Flexible and Comprehensive Deep Learning Framework in Rust"
documentation = "https://docs.rs/burn-core"
readme = "README.md"
keywords = [
    "deep-learning",
    "machine-learning",
    "tensor",
    "pytorch",
    "ndarray",
]
categories = [
    "science",
    "no-std",
    "embedded",
    "wasm",
]
license = "MIT OR Apache-2.0"
repository = "https://github.com/tracel-ai/burn/tree/main/crates/burn-core"

[package.metadata.docs.rs]
features = ["doc"]
rustdoc-args = [
    "--cfg",
    "docsrs",
]

[lib]
name = "burn_core"
path = "src/lib.rs"

[[test]]
name = "test_derive_config"
path = "tests/test_derive_config.rs"

[[test]]
name = "test_derive_module"
path = "tests/test_derive_module.rs"

[[test]]
name = "test_derive_record"
path = "tests/test_derive_record.rs"

[[test]]
name = "test_record_resilience"
path = "tests/test_record_resilience.rs"

[dependencies.ahash]
version = "0.8.11"
default-features = false

[dependencies.bincode]
version = "2.0.0-rc.3"
features = [
    "alloc",
    "serde",
]
default-features = false

[dependencies.burn-autodiff]
version = "0.15.0"
optional = true

[dependencies.burn-candle]
version = "0.15.0"
optional = true

[dependencies.burn-common]
version = "0.15.0"
default-features = false

[dependencies.burn-cuda]
version = "0.15.0"
optional = true
default-features = false

[dependencies.burn-dataset]
version = "0.15.0"
optional = true
default-features = false

[dependencies.burn-derive]
version = "0.15.0"

[dependencies.burn-hip]
version = "0.15.0"
optional = true
default-features = false

[dependencies.burn-ndarray]
version = "0.15.0"
optional = true
default-features = false

[dependencies.burn-tch]
version = "0.15.0"
optional = true

[dependencies.burn-tensor]
version = "0.15.0"
default-features = false

[dependencies.burn-wgpu]
version = "0.15.0"
optional = true
default-features = false

[dependencies.data-encoding]
version = "2.6.0"
features = ["alloc"]
default-features = false

[dependencies.derive-new]
version = "0.6.0"
default-features = false

[dependencies.flate2]
version = "1.0.34"
optional = true

[dependencies.half]
version = "2.4.1"
features = [
    "alloc",
    "num-traits",
    "serde",
]
default-features = false

[dependencies.hashbrown]
version = "0.15.0"
features = ["serde"]

[dependencies.log]
version = "0.4.22"
optional = true
default-features = false

[dependencies.num-traits]
version = "0.2.19"
features = ["libm"]
default-features = false

[dependencies.rand]
version = "0.8.5"
features = [
    "std_rng",
    "std_rng",
]
default-features = false

[dependencies.regex]
version = "1.11.0"
optional = true

[dependencies.rmp-serde]
version = "1.3.0"
optional = true

[dependencies.serde]
version = "1.0.210"
features = [
    "derive",
    "alloc",
    "derive",
]
default-features = false

[dependencies.serde_json]
version = "1.0.132"
features = ["alloc"]
default-features = false

[dependencies.spin]
version = "0.9.8"
features = [
    "mutex",
    "spin_mutex",
    "portable-atomic",
]

[dependencies.thiserror]
version = "1.0.64"
optional = true

[dependencies.uuid]
version = "1.9.1"
default-features = false

[dev-dependencies.burn-autodiff]
version = "0.15.0"

[dev-dependencies.burn-dataset]
version = "0.15.0"
features = ["fake"]

[dev-dependencies.burn-ndarray]
version = "0.15.0"
default-features = false

[dev-dependencies.tempfile]
version = "3.13.0"

[features]
accelerate = [
    "burn-candle?/accelerate",
    "burn-ndarray?/blas-accelerate",
]
autodiff = ["burn-autodiff"]
autotune = ["burn-wgpu?/autotune"]
blas-netlib = ["burn-ndarray?/blas-netlib"]
candle = ["burn-candle"]
candle-cuda = [
    "candle",
    "burn-candle/cuda",
]
cuda-jit = ["burn-cuda"]
dataset = ["burn-dataset"]
default = [
    "std",
    "burn-candle?/default",
    "burn-common/default",
    "burn-dataset?/default",
    "burn-ndarray?/default",
    "burn-tch?/default",
    "burn-tensor/default",
    "burn-wgpu?/default",
    "burn-cuda?/default",
    "burn-hip?/default",
    "burn-autodiff?/default",
]
doc = [
    "std",
    "dataset",
    "candle",
    "fusion",
    "ndarray",
    "tch",
    "wgpu",
    "cuda-jit",
    "hip-jit",
    "vision",
    "autodiff",
    "burn-candle/doc",
    "burn-common/doc",
    "burn-dataset/doc",
    "burn-ndarray/doc",
    "burn-tch/doc",
    "burn-tensor/doc",
    "burn-wgpu/doc",
    "burn-cuda/doc",
    "burn-hip/doc",
]
experimental-named-tensor = ["burn-tensor/experimental-named-tensor"]
fusion = [
    "burn-wgpu?/fusion",
    "burn-cuda?/fusion",
]
hip-jit = ["burn-hip"]
metal = ["burn-candle?/metal"]
ndarray = ["burn-ndarray"]
network = ["burn-common/network"]
openblas = ["burn-ndarray?/blas-openblas"]
openblas-system = ["burn-ndarray?/blas-openblas-system"]
record-backward-compat = []
record-item-custom-serde = [
    "thiserror",
    "regex",
]
sqlite = ["burn-dataset?/sqlite"]
sqlite-bundled = ["burn-dataset?/sqlite-bundled"]
std = [
    "burn-autodiff?/std",
    "bincode/std",
    "burn-candle?/std",
    "burn-common/std",
    "burn-ndarray?/std",
    "burn-tensor/std",
    "burn-wgpu?/std",
    "burn-cuda?/std",
    "burn-hip?/std",
    "flate2",
    "half/std",
    "log",
    "rand/std",
    "rmp-serde",
    "serde/std",
    "serde_json/std",
    "num-traits/std",
]
tch = ["burn-tch"]
template = ["burn-wgpu?/template"]
test-cuda = ["cuda-jit"]
test-hip = ["hip-jit"]
test-tch = ["tch"]
test-wgpu = ["wgpu"]
test-wgpu-spirv = [
    "test-wgpu",
    "wgpu-spirv",
]
vision = [
    "burn-dataset?/vision",
    "burn-common/network",
]
wgpu = ["burn-wgpu"]
wgpu-spirv = [
    "wgpu",
    "burn-wgpu/spirv",
]

[target.'cfg(not(target_has_atomic = "ptr"))'.dependencies.portable-atomic-util]
version = "0.2.2"
features = ["alloc"]

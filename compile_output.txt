   Compiling hyprstream v0.1.0-alpha-7 (/mnt/hyprstream/hyprstream)
warning: hyprstream@0.1.0-alpha-7: Found CUDA at /usr/local/cuda, enabling GPU acceleration
warning: hyprstream@0.1.0-alpha-7: Building CPU-only version (CUDA integration in progress)
warning: hyprstream@0.1.0-alpha-7: pkg-config failed, trying system OpenVDB installation...
warning: hyprstream@0.1.0-alpha-7: Found system OpenVDB installation
warning: hyprstream@0.1.0-alpha-7: âœ… Built with OpenVDB support - VDB features enabled
warning: elided lifetime has a name
   --> src/api/model_storage.rs:234:151
    |
234 | ...ursive<'a>(&'a self, model_path: &'a Path) -> std::pin::Pin<Box<dyn std::future::Future<Output = Result<u64>> + Send + '_>> {
    |           -- lifetime `'a` declared here                                                                                  ^^ this elided lifetime gets resolved as `'a`
    |
    = note: `#[warn(elided_named_lifetimes)]` on by default

warning: unused import: `ModelConfig`
 --> src/models/model_registry.rs:3:33
  |
3 | use crate::config::{HyprConfig, ModelConfig, ModelInfo};
  |                                 ^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: private item shadows public glob re-export
  --> src/storage/vdb/mod.rs:7:17
   |
7  | use std::path::{Path, PathBuf};
   |                 ^^^^
   |
note: the name `Path` in the type namespace is supposed to be publicly re-exported here
  --> src/storage/vdb/mod.rs:46:9
   |
46 | pub use neuralvdb_codec::*;
   |         ^^^^^^^^^^^^^^^^^^
note: but the private item here shadows it
  --> src/storage/vdb/mod.rs:7:17
   |
7  | use std::path::{Path, PathBuf};
   |                 ^^^^
   = note: `#[warn(hidden_glob_reexports)]` on by default

warning: unused import: `OpenVDBBatchOps`
 --> src/storage/vdb/hardware_accelerated.rs:5:25
  |
5 |     OpenVDBLoRAAdapter, OpenVDBBatchOps
  |                         ^^^^^^^^^^^^^^^

warning: unused import: `std::fmt`
 --> src/storage/vdb/hardware_accelerated.rs:8:5
  |
8 | use std::fmt;
  |     ^^^^^^^^

warning: unused import: `SparseWeights`
  --> src/storage/vdb/hardware_accelerated.rs:22:33
   |
22 | use crate::storage::vdb::grid::{SparseWeights, Coordinate3D};
   |                                 ^^^^^^^^^^^^^

warning: ambiguous glob re-exports
  --> src/storage/vdb/mod.rs:30:9
   |
30 | pub use compression::*;
   |         ^^^^^^^^^^^^^^ the name `CompressionStats` in the type namespace is first re-exported here
...
46 | pub use neuralvdb_codec::*;
   |         ------------------ but the name `CompressionStats` in the type namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
  --> src/storage/vdb/mod.rs:31:9
   |
31 | pub use adapter_store::*;
   |         ^^^^^^^^^^^^^^^^ the name `AdapterInfo` in the type namespace is first re-exported here
...
44 | pub use hardware_accelerated::*;
   |         ----------------------- but the name `AdapterInfo` in the type namespace is also re-exported here

warning: unused variable: `lora_b`
   --> src/storage/vdb/hardware_accelerated.rs:191:62
    |
191 |     async fn quantize_weight_clusters(&self, lora_a: &[f32], lora_b: &[f32]) -> Result<Vec<(u16, u16, f32)>, VDBError> {
    |                                                              ^^^^^^ help: if this is intentional, prefix it with an underscore: `_lora_b`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `i`
   --> src/storage/vdb/hardware_accelerated.rs:968:14
    |
968 |         for (i, &(x, y, weight)) in cluster_data.iter().enumerate() {
    |              ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `z_pattern`
   --> src/storage/vdb/hardware_accelerated.rs:979:9
    |
979 |         z_pattern: &ZOrderPattern
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_z_pattern`

warning: unused variable: `values`
   --> src/storage/vdb/neuralvdb_codec.rs:556:9
    |
556 |         values: &ValueEncoding,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_values`

warning: unused variable: `z_pattern`
    --> src/storage/vdb/hardware_accelerated.rs:1035:9
     |
1035 |         z_pattern: &ZOrderPattern
     |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_z_pattern`

warning: unused variable: `input`
   --> src/api/training_service.rs:379:9
    |
379 |         input: &str,
    |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_input`

warning: unused variable: `api`
  --> src/api/huggingface.rs:54:13
   |
54 |         let api = hf_hub::api::tokio::ApiBuilder::new()
   |             ^^^ help: if this is intentional, prefix it with an underscore: `_api`

warning: unused variable: `endpoint`
   --> src/api/inference_service.rs:108:13
    |
108 |         let endpoint = {
    |             ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_endpoint`

error[E0560]: struct `RuntimeConfig` has no field named `num_threads`
  --> src/cli/commands/quick_start.rs:92:9
   |
92 |         num_threads: None,
   |         ^^^^^^^^^^^ unknown field
   |
help: a field with a similar name exists
   |
92 |         cpu_threads: None,
   |         ~~~~~~~~~~~

warning: unused variable: `author`
   --> src/cli/commands/download.rs:140:9
    |
140 |     let author = parts[0];
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_author`

warning: unused variable: `fallback_patterns`
   --> src/cli/commands/download.rs:376:17
    |
376 |             let fallback_patterns = vec![
    |                 ^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_fallback_patterns`

warning: unused variable: `adapter`
   --> src/storage/vdb/sparse_storage.rs:379:21
    |
379 |         if let Some(adapter) = adapter_cache.get_mut(adapter_id) {
    |                     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_adapter`

warning: unused variable: `cert`
   --> src/cli/handlers.rs:142:17
    |
142 |             let cert = tokio::fs::read(cert_path).await?;
    |                 ^^^^ help: if this is intentional, prefix it with an underscore: `_cert`

warning: unused variable: `key`
   --> src/cli/handlers.rs:143:17
    |
143 |             let key = tokio::fs::read(key_path).await?;
    |                 ^^^ help: if this is intentional, prefix it with an underscore: `_key`

warning: unused variable: `ca`
   --> src/cli/handlers.rs:144:17
    |
144 |             let ca = if let Some(ca_path) = tls_ca {
    |                 ^^ help: if this is intentional, prefix it with an underscore: `_ca`

warning: unused variable: `model_path`
   --> src/cli/handlers.rs:432:17
    |
432 |             let model_path = if uri.starts_with("hf://") {
    |                 ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_model_path`

warning: unused variable: `words`
   --> src/inference/inference_engine.rs:194:17
    |
194 |             let words: Vec<&str> = prompt.split_whitespace().collect();
    |                 ^^^^^ help: if this is intentional, prefix it with an underscore: `_words`

warning: unused variable: `model_id`
  --> src/models/model_registry.rs:58:35
   |
58 |     pub async fn get_model(&self, model_id: &str) -> Option<Arc<dyn RuntimeEngine + '_>> {
   |                                   ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_model_id`

warning: unused variable: `models`
  --> src/models/model_registry.rs:59:13
   |
59 |         let models = self.models.read().await;
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_models`

warning: unused variable: `start`
   --> src/storage/vdb/hardware_accelerated.rs:329:13
    |
329 |         let start = std::time::Instant::now();
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`

warning: use of deprecated method `arrow_ipc::writer::IpcDataGenerator::schema_to_bytes`: Use `schema_to_bytes_with_dictionary_tracker` instead. This function signature of `schema_to_bytes_with_dictionary_tracker` in the next release.
   --> src/api/inference_service.rs:274:47
    |
274 |             let encoded_schema = encoded_data.schema_to_bytes(&schema, &schema_message);
    |                                               ^^^^^^^^^^^^^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: unused variable: `path`
   --> src/runtime/lora_wrapper.rs:315:36
    |
315 |     async fn load_model(&mut self, path: &Path) -> Result<()> {
    |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: unused variable: `vs`
   --> src/storage/vdb/neuralvdb_codec.rs:680:16
    |
680 |     pub fn new(vs: &Path, input_dim: i64) -> Result<Self, Box<dyn std::error::Error>> {
    |                ^^ help: if this is intentional, prefix it with an underscore: `_vs`

warning: unused variable: `vs`
   --> src/storage/vdb/neuralvdb_codec.rs:722:16
    |
722 |     pub fn new(vs: &Path, input_dim: i64, latent_dim: i64) -> Result<Self, Box<dyn std::error::Error>> {
    |                ^^ help: if this is intentional, prefix it with an underscore: `_vs`

warning: unused variable: `compressed`
   --> src/storage/vdb/neuralvdb_codec.rs:765:26
    |
765 |     pub fn decode(&self, compressed: &Tensor) -> Result<Tensor, Box<dyn std::error::Error>> {
    |                          ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_compressed`

warning: unused variable: `h`
   --> src/storage/vdb/mod.rs:256:22
    |
256 |                 let (h, w) = (shape[0], shape[1]);
    |                      ^ help: if this is intentional, prefix it with an underscore: `_h`

For more information about this error, try `rustc --explain E0560`.
warning: `hyprstream` (lib) generated 33 warnings
warning: hyprstream@0.1.0-alpha-7: Found CUDA at /usr/local/cuda, enabling GPU acceleration
warning: hyprstream@0.1.0-alpha-7: Building CPU-only version (CUDA integration in progress)
warning: hyprstream@0.1.0-alpha-7: pkg-config failed, trying system OpenVDB installation...
warning: hyprstream@0.1.0-alpha-7: Found system OpenVDB installation
warning: hyprstream@0.1.0-alpha-7: âœ… Built with OpenVDB support - VDB features enabled
error: could not compile `hyprstream` (lib) due to 1 previous error; 33 warnings emitted

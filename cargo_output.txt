warning: only one of `license` or `license-file` is necessary
`license` should be used if the package license can be expressed with a standard SPDX expression.
`license-file` should be used if the package uses a non-standard license.
See https://doc.rust-lang.org/cargo/reference/manifest.html#the-license-and-license-file-fields for more information.
warning: unused manifest key: build
warning: unused manifest key: source
warning: unused variable: `cuda_available`
  --> build.rs:20:9
   |
20 |     let cuda_available = check_cuda_availability();
   |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_cuda_available`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: function `build_with_cuda` is never used
  --> build.rs:44:4
   |
44 | fn build_with_cuda() {
   |    ^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: function `generate_cuda_bindings` is never used
   --> build.rs:120:4
    |
120 | fn generate_cuda_bindings() {
    |    ^^^^^^^^^^^^^^^^^^^^^^

warning: `hyprstream` (build script) generated 3 warnings
warning: hyprstream@0.1.0-alpha-7: Found CUDA at /usr/local/cuda, enabling GPU acceleration
warning: hyprstream@0.1.0-alpha-7: Building CPU-only version (CUDA integration in progress)
    Checking hyprstream v0.1.0-alpha-7 (/mnt/hyprstream/hyprstream)
warning: unused import: `serde_json::Value`
 --> src/cli/commands/model.rs:4:5
  |
4 | use serde_json::Value;
  |     ^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: unused import: `std::path::PathBuf`
 --> src/cli/commands/model.rs:5:5
  |
5 | use std::path::PathBuf;
  |     ^^^^^^^^^^^^^^^^^^

warning: unused import: `serde_json::Value`
 --> src/cli/commands/lora.rs:4:5
  |
4 | use serde_json::Value;
  |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
 --> src/cli/commands/lora.rs:5:5
  |
5 | use std::collections::HashMap;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> src/cli/commands/quick_start.rs:7:5
  |
7 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `crate::error::StatusWrapper`
 --> src/query/planner.rs:4:5
  |
4 | use crate::error::StatusWrapper;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `DataFusionError`
 --> src/query/planner.rs:5:25
  |
5 | use datafusion::error::{DataFusionError, Result};
  |                         ^^^^^^^^^^^^^^^

warning: unused import: `datafusion::datasource::memory::MemTable`
  --> src/query/planner.rs:10:5
   |
10 | use datafusion::datasource::memory::MemTable;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Expr`
 --> src/query/rules/view.rs:4:56
  |
4 | use datafusion::logical_expr::{LogicalPlan, TableScan, Expr};
  |                                                        ^^^^

warning: unused imports: `context::LlamaContext` and `token::data_array::LlamaTokenDataArray`
  --> src/runtime/llamacpp_engine.rs:10:5
   |
10 |     context::LlamaContext,
   |     ^^^^^^^^^^^^^^^^^^^^^
...
13 |     token::data_array::LlamaTokenDataArray,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `FinishReason`
  --> src/runtime/lora_wrapper.rs:12:76
   |
12 | use super::{RuntimeEngine, ModelInfo, GenerationRequest, GenerationResult, FinishReason};
   |                                                                            ^^^^^^^^^^^^

warning: private item shadows public glob re-export
  --> src/storage/vdb/mod.rs:7:17
   |
7  | use std::path::{Path, PathBuf};
   |                 ^^^^
   |
note: the name `Path` in the type namespace is supposed to be publicly re-exported here
  --> src/storage/vdb/mod.rs:28:9
   |
28 | pub use neuralvdb_codec::*;
   |         ^^^^^^^^^^^^^^^^^^
note: but the private item here shadows it
  --> src/storage/vdb/mod.rs:7:17
   |
7  | use std::path::{Path, PathBuf};
   |                 ^^^^
   = note: `#[warn(hidden_glob_reexports)]` on by default

warning: unused imports: `c_char`, `c_float`, and `c_void`
 --> src/storage/vdb/nanovdb_bindings.rs:3:20
  |
3 | use std::os::raw::{c_char, c_float, c_void};
  |                    ^^^^^^  ^^^^^^^  ^^^^^^

warning: unused imports: `CStr` and `CString`
 --> src/storage/vdb/nanovdb_bindings.rs:5:16
  |
5 | use std::ffi::{CStr, CString};
  |                ^^^^  ^^^^^^^

warning: unused import: `crate::runtime::LoRAConfig`
  --> src/storage/vdb/hardware_accelerated.rs:10:5
   |
10 | use crate::runtime::LoRAConfig;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::runtime::LoRAConfig`
 --> src/storage/vdb/neuralvdb_codec.rs:8:5
  |
8 | use crate::runtime::LoRAConfig;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `crate::runtime::LoRAConfig`
  --> src/storage/vdb/sparse_storage.rs:15:5
   |
15 | use crate::runtime::LoRAConfig;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: ambiguous glob re-exports
  --> src/storage/vdb/mod.rs:23:9
   |
23 | pub use grid::*;
   |         ^^^^^^^ the name `GridStats` in the type namespace is first re-exported here
...
26 | pub use nanovdb_bindings::*;
   |         ------------------- but the name `GridStats` in the type namespace is also re-exported here
   |
   = note: `#[warn(ambiguous_glob_reexports)]` on by default

warning: ambiguous glob re-exports
  --> src/storage/vdb/mod.rs:24:9
   |
24 | pub use compression::*;
   |         ^^^^^^^^^^^^^^ the name `CompressionStats` in the type namespace is first re-exported here
...
28 | pub use neuralvdb_codec::*;
   |         ------------------ but the name `CompressionStats` in the type namespace is also re-exported here

warning: ambiguous glob re-exports
  --> src/storage/vdb/mod.rs:25:9
   |
25 | pub use adapter_store::*;
   |         ^^^^^^^^^^^^^^^^ the name `AdapterInfo` in the type namespace is first re-exported here
26 | pub use nanovdb_bindings::*;
27 | pub use hardware_accelerated::*;
   |         ----------------------- but the name `AdapterInfo` in the type namespace is also re-exported here

warning: use of deprecated struct `service::flight::FlightSqlService`: Use EmbeddingFlightService for VDB-first architecture
 --> src/service/flight.rs:9:6
  |
9 | impl FlightSqlService {
  |      ^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(deprecated)]` on by default

warning: unused variable: `lora_b`
   --> src/adapters/sparse_lora.rs:179:17
    |
179 |             let lora_b = self.lora_b.write().await;
    |                 ^^^^^^ help: if this is intentional, prefix it with an underscore: `_lora_b`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `start`
   --> src/adapters/sparse_lora.rs:192:13
    |
192 |         let start = std::time::Instant::now();
    |             ^^^^^ help: if this is intentional, prefix it with an underscore: `_start`

error[E0277]: the trait bound `impl futures::Future<Output = std::result::Result<PathBuf, hf_hub::api::tokio::ApiError>>: AsRef<std::path::Path>` is not satisfied
   --> src/cli/commands/download.rs:107:22
    |
107 |     tokio::fs::copy(&download_result, local_path).await
    |     ---------------  ^^^^^^^^^^^^^^^ unsatisfied trait bound
    |     |
    |     required by a bound introduced by this call
    |
    = help: the trait `AsRef<std::path::Path>` is not implemented for `impl futures::Future<Output = std::result::Result<PathBuf, hf_hub::api::tokio::ApiError>>`
    = note: required for `&impl futures::Future<Output = std::result::Result<PathBuf, hf_hub::api::tokio::ApiError>>` to implement `AsRef<std::path::Path>`
note: required by a bound in `tokio::fs::copy`
   --> /private/birdetta/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.43.0/src/fs/copy.rs:21:30
    |
21  | pub async fn copy(from: impl AsRef<Path>, to: impl AsRef<Path>) -> Result<u64, std::io::Error> {
    |                              ^^^^^^^^^^^ required by this bound in `copy`

error[E0277]: the trait bound `impl futures::Future<Output = std::result::Result<PathBuf, hf_hub::api::tokio::ApiError>>: AsRef<std::path::Path>` is not satisfied
   --> src/cli/commands/download.rs:107:5
    |
107 |     tokio::fs::copy(&download_result, local_path).await
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ unsatisfied trait bound
    |
    = help: the trait `AsRef<std::path::Path>` is not implemented for `impl futures::Future<Output = std::result::Result<PathBuf, hf_hub::api::tokio::ApiError>>`
    = note: required for `&impl futures::Future<Output = std::result::Result<PathBuf, hf_hub::api::tokio::ApiError>>` to implement `AsRef<std::path::Path>`
note: required by a bound in `tokio::fs::copy`
   --> /private/birdetta/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.43.0/src/fs/copy.rs:21:30
    |
21  | pub async fn copy(from: impl AsRef<Path>, to: impl AsRef<Path>) -> Result<u64, std::io::Error> {
    |                              ^^^^^^^^^^^ required by this bound in `copy`

error[E0277]: the trait bound `impl futures::Future<Output = std::result::Result<PathBuf, hf_hub::api::tokio::ApiError>>: AsRef<std::path::Path>` is not satisfied
   --> src/cli/commands/download.rs:107:51
    |
107 |     tokio::fs::copy(&download_result, local_path).await
    |                                                   ^^^^^ unsatisfied trait bound
    |
    = help: the trait `AsRef<std::path::Path>` is not implemented for `impl futures::Future<Output = std::result::Result<PathBuf, hf_hub::api::tokio::ApiError>>`
    = note: required for `&impl futures::Future<Output = std::result::Result<PathBuf, hf_hub::api::tokio::ApiError>>` to implement `AsRef<std::path::Path>`
note: required by a bound in `tokio::fs::copy`
   --> /private/birdetta/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.43.0/src/fs/copy.rs:21:30
    |
21  | pub async fn copy(from: impl AsRef<Path>, to: impl AsRef<Path>) -> Result<u64, std::io::Error> {
    |                              ^^^^^^^^^^^ required by this bound in `copy`

warning: unused variable: `author`
   --> src/cli/commands/download.rs:128:9
    |
128 |     let author = parts[0];
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_author`

warning: unused variable: `repo`
   --> src/cli/commands/download.rs:190:9
    |
190 |     let repo = api.model(model_uri.to_string());
    |         ^^^^ help: if this is intentional, prefix it with an underscore: `_repo`

warning: unused variable: `adapter_id`
   --> src/storage/vdb/hardware_accelerated.rs:323:9
    |
323 |         adapter_id: &str,
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_adapter_id`

warning: unused variable: `sparse_updates`
   --> src/storage/vdb/hardware_accelerated.rs:324:9
    |
324 |         sparse_updates: &HashMap<Coordinate3D, f32>,
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_sparse_updates`

warning: unused variable: `adapter`
   --> src/storage/vdb/sparse_storage.rs:366:21
    |
366 |         if let Some(adapter) = adapter_cache.get_mut(adapter_id) {
    |                     ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_adapter`

warning: unused variable: `force`
   --> src/cli/handlers.rs:230:34
    |
230 |         ModelAction::Pull { uri, force, files, progress } => {
    |                                  ^^^^^ help: try ignoring the field: `force: _`

warning: unused variable: `batch_size`
   --> src/models/qwen3.rs:186:13
    |
186 |         let batch_size = 1;
    |             ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_batch_size`

warning: unused variable: `values`
   --> src/storage/vdb/neuralvdb_codec.rs:557:9
    |
557 |         values: &ValueEncoding,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_values`

warning: use of deprecated method `arrow_ipc::writer::IpcDataGenerator::schema_to_bytes`: Use `schema_to_bytes_with_dictionary_tracker` instead. This function signature of `schema_to_bytes_with_dictionary_tracker` in the next release.
   --> src/service/embedding_flight.rs:374:43
    |
374 |         let encoded_schema = encoded_data.schema_to_bytes(&schema, &schema_message);
    |                                           ^^^^^^^^^^^^^^^

warning: unused import: `futures::TryFutureExt`
 --> src/cli/commands/download.rs:7:5
  |
7 | use futures::TryFutureExt;
  |     ^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `StreamExt`
  --> src/service/embedding_flight.rs:23:37
   |
23 | use futures::stream::{self, Stream, StreamExt};
   |                                     ^^^^^^^^^

warning: unused variable: `from_timestamp`
   --> src/metrics/storage.rs:148:35
    |
148 |     async fn query_metrics(&self, from_timestamp: i64) -> Result<Vec<MetricRecord>, Status> {
    |                                   ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_from_timestamp`

warning: unused variable: `group_by`
   --> src/metrics/storage.rs:202:9
    |
202 |         group_by: &GroupBy,
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_group_by`

warning: unused variable: `from_timestamp`
   --> src/metrics/storage.rs:203:9
    |
203 |         from_timestamp: i64,
    |         ^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_from_timestamp`

warning: unused variable: `to_timestamp`
   --> src/metrics/storage.rs:204:9
    |
204 |         to_timestamp: Option<i64>,
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_to_timestamp`

warning: unused variable: `config`
   --> src/models/qwen3.rs:356:44
    |
356 |     fn is_stop_token(&self, token_id: u32, config: &GenerationConfig) -> bool {
    |                                            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `model`
   --> src/runtime/llamacpp_engine.rs:227:35
    |
227 |     fn estimate_parameters(&self, model: &LlamaModel) -> Result<u64> {
    |                                   ^^^^^ help: if this is intentional, prefix it with an underscore: `_model`

warning: unused variable: `path`
   --> src/runtime/lora_wrapper.rs:315:36
    |
315 |     async fn load_model(&mut self, path: &Path) -> Result<()> {
    |                                    ^^^^ help: if this is intentional, prefix it with an underscore: `_path`

warning: unused variable: `h`
   --> src/storage/vdb/hardware_accelerated.rs:510:22
    |
510 |                 let (h, w) = (shape[0], shape[1]);
    |                      ^ help: if this is intentional, prefix it with an underscore: `_h`

warning: unused variable: `d`
   --> src/storage/vdb/hardware_accelerated.rs:516:22
    |
516 |                 let (d, h, w) = (shape[0], shape[1], shape[2]);
    |                      ^ help: if this is intentional, prefix it with an underscore: `_d`

warning: unused variable: `vs`
   --> src/storage/vdb/neuralvdb_codec.rs:681:16
    |
681 |     pub fn new(vs: &Path, input_dim: i64) -> Result<Self, Box<dyn std::error::Error>> {
    |                ^^ help: if this is intentional, prefix it with an underscore: `_vs`

warning: unused variable: `vs`
   --> src/storage/vdb/neuralvdb_codec.rs:723:16
    |
723 |     pub fn new(vs: &Path, input_dim: i64, latent_dim: i64) -> Result<Self, Box<dyn std::error::Error>> {
    |                ^^ help: if this is intentional, prefix it with an underscore: `_vs`

warning: unused variable: `compressed`
   --> src/storage/vdb/neuralvdb_codec.rs:766:26
    |
766 |     pub fn decode(&self, compressed: &Tensor) -> Result<Tensor, Box<dyn std::error::Error>> {
    |                          ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_compressed`

warning: unused variable: `h`
   --> src/storage/vdb/mod.rs:239:22
    |
239 |                 let (h, w) = (shape[0], shape[1]);
    |                      ^ help: if this is intentional, prefix it with an underscore: `_h`

For more information about this error, try `rustc --explain E0277`.
warning: `hyprstream` (lib) generated 47 warnings
warning: hyprstream@0.1.0-alpha-7: Found CUDA at /usr/local/cuda, enabling GPU acceleration
warning: hyprstream@0.1.0-alpha-7: Building CPU-only version (CUDA integration in progress)
error: could not compile `hyprstream` (lib) due to 3 previous errors; 47 warnings emitted
